# Алгоритм
# 1. Находится средний элемент последовательности. Для этого первый и последний индексы связываются с переменными,
# а индекс среднего элемента вычисляется.
# 2. Значение среднего элемента сравнивается с искомым значение. В зависимости от того, больше оно или меньше значения
# среднего элемента, дальнейший поиск будет происходить только в левой или только в правой половинах массива.
# Если значение среднего элемента оказывается равным искомому, поиск завершается.
# 3. Иначе одна из границ исследуемой последовательности сдвигается. Если искомое значение больше значения
# среднего элемента, то нижняя граница сдвигается за средний элемент на один элемент справа.
# Если искомое значение меньше значения среднего элемента, то верхняя граница сдвигается на элемент перед средним.
# 4. Снова находится средний элемент теперь уже в выбранной половине.
# Описанный выше алгоритм повторяется для данного среза.

from random import randint

# Создание списка,
# его сортировка по возрастанию
# и вывод на экран
a = []
for i in range(10):
    a.append(randint(1, 50))
a.sort()
print(a)

# искомое число
value = int(input())

mid = len(a) // 2
low = 0
high = len(a) - 1

while a[mid] != value and low <= high:
    if value > a[mid]:
        low = mid + 1
    else:
        high = mid - 1
    mid = (low + high) // 2

if low > high:
    print("No value")
else:
    print("ID =", mid)